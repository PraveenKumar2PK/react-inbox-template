{"version":3,"sources":["components/EditableTable.js","components/PortalPage.js","App.js","serviceWorker.js","index.js"],"names":["originData","Title","Typography","modalData","data","forEach","index","push","key","EditableCell","editing","dataIndex","title","inputType","children","record","restProps","inputNode","Item","name","style","margin","rules","required","message","EditableTable","Form","useForm","form","useState","setData","loading","editingKey","setEditingKey","searchText","searchedColumn","setSearchData","isEditDisplay","setIsEditDisplay","searchInput","useRef","selectedName","setSelectedName","isEditing","onClose","useCallback","cancel","save","a","validateFields","row","newData","findIndex","item","splice","console","log","columns","width","editable","sorter","b","length","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","placeholder","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","current","select","render","text","age","filters","_","href","marginRight","onConfirm","disabled","edit","handleTableChange","pagination","filterKeys","Object","keys","filteredData","selectedGenders","filter","gender","toLocaleLowerCase","mergedColumns","map","col","onCell","component","components","body","cell","bordered","dataSource","rowClassName","scroll","x","y","level","placement","closable","paddingTop","justifyContent","PortalPage","isFilterDisplay","setFilterDisplay","showMenu","backgroundColor","alignItems","paddingLeft","cursor","MenuOutlined","flexDirection","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.88d7faba.chunk.js","sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Button, Space, Drawer, Typography} from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport modalData from '../modelData.json';\r\nconst originData = [];\r\nconst {Title} = Typography;\r\n\r\nmodalData.data.forEach((data, index) =>{\r\n    originData.push({\r\n        key: index,\r\n        ...data\r\n    });\r\n});\r\n\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst EditableTable = () => {\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState(originData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [editingKey, setEditingKey] = useState('');\r\n  const [searchData, setSearchData] = useState({\r\n    searchText: '',\r\n    searchedColumn: ''\r\n  });\r\n  const [isEditDisplay, setIsEditDisplay] = useState(false);\r\n  const searchInput = useRef(null);\r\n  const [selectedName, setSelectedName] = useState('');\r\n\r\n  const isEditing = (record) => record.key === editingKey;\r\n\r\n  const edit = (record) => {\r\n    // form.setFieldsValue({\r\n    //   name: '',\r\n    //   age: '',\r\n    //   address: '',\r\n    //   ...record,\r\n    // });\r\n    // setEditingKey(record.key);\r\n    setSelectedName(record.name);\r\n    setIsEditDisplay(true);\r\n  };\r\n  const onClose = useCallback(() => {\r\n    setIsEditDisplay(false);\r\n  },[]);\r\n\r\n  const cancel = () => {\r\n    setEditingKey('');\r\n  };\r\n\r\n  const save = async (key) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, { ...item, ...row });\r\n        setData(newData);\r\n        setEditingKey('');\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey('');\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  const getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : '',\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => {\r\n          if(searchInput?.current) {\r\n            searchInput.current.select()\r\n          }\r\n        }, 100);\r\n      }\r\n    },\r\n    render: text => text\r\n  });\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n      editable: true,\r\n      sorter: (a, b) => a.name.length - b.name.length,\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      width: '15%',\r\n      editable: true,\r\n      sorter: (a, b) => a.age - b.age,\r\n    },\r\n    {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        width: '15%',\r\n        editable: true,\r\n        filters: [\r\n            { text: 'Male', value: 'male' },\r\n            { text: 'Female', value: 'female' },\r\n        ],\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      width: '40%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Operation',\r\n      dataIndex: 'operation',\r\n      width: '10%',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </a>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <a>Cancel</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <a disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n            Edit\r\n          </a>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleTableChange = useCallback((pagination, filters, sorter) => {\r\n    const filterKeys = Object.keys(filters);\r\n    let filteredData = [...originData];\r\n    if (filterKeys.includes('gender')) {\r\n      const selectedGenders = filters['gender'];\r\n      if (selectedGenders?.length) {\r\n        filteredData = filteredData.filter(data=>selectedGenders.includes(data.gender.toLocaleLowerCase()));\r\n      }\r\n    }\r\n    setData(filteredData);\r\n  }, []);\r\n\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchData({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  const handleReset = clearFilters => {\r\n    clearFilters();\r\n    setSearchData({ searchText: '' });\r\n  };\r\n  \r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <div>\r\n      <Form form={form} component={false}>\r\n        <Table\r\n          components={{\r\n            body: {\r\n              cell: EditableCell,\r\n            },\r\n          }}\r\n          bordered\r\n          dataSource={data}\r\n          columns={mergedColumns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            onChange: cancel,\r\n          }}\r\n          scroll={{ x: 1000, y: 450 }}\r\n          loading={loading}\r\n          onChange={handleTableChange}\r\n        />\r\n      </Form>\r\n      <Drawer\r\n          title={<Title level={5}>Edit</Title>}\r\n          placement='right'\r\n          closable={false}\r\n          onClose={onClose}\r\n          visible={isEditDisplay}\r\n          key='right'\r\n          width={520}\r\n        >\r\n          <div>\r\n            <Title level={5}>Name:</Title>\r\n            <Input value={selectedName} />\r\n          </div>\r\n          <div style={{ paddingTop: 16}}>\r\n            <Title level={5}>Phone Number:</Title>\r\n            <Input />\r\n          </div>\r\n          <div style={{display: 'flex', justifyContent: 'space-around', paddingTop: 24}}>\r\n            <Button type=\"primary\">Save</Button>\r\n            <Button>Cancel</Button>\r\n          </div>\r\n        </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditableTable;","import React, { useState, useCallback } from 'react';\r\nimport { Button, Drawer, Typography, Checkbox } from 'antd';\r\nimport EditableTable from './EditableTable';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\n\r\nconst { Title } = Typography;\r\nconst PortalPage = () => {\r\n  const [isFilterDisplay, setFilterDisplay] = useState(false);\r\n  const onClose = useCallback(() => {\r\n    setFilterDisplay(false);\r\n  },[]);\r\n  const showMenu = useCallback(() => {\r\n    setFilterDisplay(true);\r\n  },[]);\r\n  return (\r\n    <div>\r\n      <div style={{backgroundColor: '#1890ff', display: 'flex'}}>\r\n        <div style={{color: '#f8f8f8', display: 'flex', justifyContent: 'center', alignItems: 'center', paddingLeft: 16, cursor: 'pointer'}}>\r\n          <Button type=\"primary\" onClick={showMenu}>\r\n            <MenuOutlined />\r\n          </Button>\r\n        </div>\r\n        <Title style={{color: '#f8f8f8', paddingTop: 8, paddingLeft: 16}} level={3}>Voter List</Title>\r\n      </div>\r\n      <div style={{ padding: '16px'}}>\r\n        <EditableTable />\r\n        <Drawer\r\n            title={<Title level={5}>Filter</Title>}\r\n            placement='left'\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={isFilterDisplay}\r\n            key='left'\r\n          >\r\n            <div>\r\n              <Title level={4}>State</Title>\r\n              <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <div>\r\n                  <Checkbox>TamilNadu</Checkbox>\r\n                </div>\r\n                <div>\r\n                  <Checkbox>Kerala</Checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{paddingTop: 16}}>\r\n              <Title level={4}>District</Title>\r\n              <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <div>\r\n                  <Checkbox>Chennai</Checkbox>\r\n                </div>\r\n                <div>\r\n                  <Checkbox>Madurai</Checkbox>\r\n                </div>\r\n                <div>\r\n                  <Checkbox>Salem</Checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div style={{paddingTop: 16}}>\r\n              <Title level={4}>Booth</Title>\r\n              <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                <div>\r\n                  <Checkbox>Booth 1</Checkbox>\r\n                </div>\r\n                <div>\r\n                  <Checkbox>Booth 2</Checkbox>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Drawer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortalPage;","import React from 'react';\r\nimport './app.css';\r\nimport 'antd/dist/antd.css';\r\nimport PortalPage from './components/PortalPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <PortalPage />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}